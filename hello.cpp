#include "hello.h"//some constantsconst short defaultMenubar = 128;const short menuApple = 128;const short menuFile = 129;const short menuitemAbout = 1;const short menuitemQuit = 1;const short yosposControl = 128;const short defaultWindow = 128;WindowPtr mainWindow;#if __MWERKS__ == 0QDGlobals qd;#endifvoid InitializeManagers(){	InitGraf(&qd.thePort);	InitFonts();	InitWindows();	InitMenus();	TEInit();	InitDialogs(nil);	InitCursor();		Handle menubar = GetNewMBar(defaultMenubar);	SetMenuBar(menubar);	DrawMenuBar();}void Terminate() {	ExitToShell();}void ProcessMenuClick(EventRecord event){	//Just like the IIgs.	long menuAction = MenuSelect(event.where);		if(menuAction > 0) {		short menu = HiWord(menuAction);		short item = LoWord(menuAction);		if(menu == menuApple) {			if (item == menuitemAbout) {				SysBeep(1);			}		} 		else if (menu == menuFile) {			if(item == menuitemQuit) {				Terminate();			}		}		HiliteMenu(0);	}}void MainLoop(){	EventRecord event;		while(true) {		if(WaitNextEvent(everyEvent, &event, 10L, nil)) {			if(event.what == mouseDown) {				WindowPtr clickedWindow;				short clickedPart = FindWindow(event.where, &clickedWindow);								if (clickedPart == inMenuBar) {					ProcessMenuClick(event);				}				else if (clickedPart == inDrag) {					DragWindow(clickedWindow, event.where, &qd.screenBits.bounds);				}				else if (clickedPart == inGoAway) {					if(TrackGoAway(clickedWindow, event.where))						DisposeWindow(clickedWindow);				}			}			else if(event.what == updateEvt) {				WindowPtr windowToUpdate = (WindowPtr)event.message;							BeginUpdate(windowToUpdate);				UpdateControls(windowToUpdate, windowToUpdate->visRgn);				EndUpdate(windowToUpdate);			}		}	}}void main() {	InitializeManagers();		mainWindow = GetNewWindow(defaultWindow, nil, (WindowPtr)-1);	GetNewControl(yosposControl, mainWindow);		MainLoop();		Terminate();}